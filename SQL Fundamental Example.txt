SQL Fundamental Example

1. DDL (Data Definition Language)

ðŸ‘‰ Fungsi: Membuat & mengatur struktur tabel/database.

Contoh Soal: Buat tabel users dengan kolom id (PK), username, email, password.

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL
);

ðŸ”¹ 2. DML (Data Manipulation Language)

ðŸ‘‰ Fungsi: Menambah, mengubah, menghapus data.

Soal Insert: Tambahkan user baru.

INSERT INTO users (username, email, password)
VALUES ('Gerry', 'gerry@mail.com', '12345');


Soal Update: Ubah password Gerry.

UPDATE users SET password = 'newpass123'
WHERE username = 'Gerry';


Soal Delete: Hapus user dengan email budi@mail.com.

DELETE FROM users WHERE email = 'budi@mail.com';

ðŸ”¹ 3. SELECT (Dasar)

ðŸ‘‰ Fungsi: Menampilkan data dengan filter.

Soal: Tampilkan semua user dengan email @mail.com.

SELECT * FROM users
WHERE email LIKE '%@mail.com';


Soal: Tampilkan 5 user terbaru.

SELECT * FROM users
ORDER BY id DESC
LIMIT 5;

ðŸ”¹ 4. Aggregate Function

ðŸ‘‰ Fungsi: Menghitung nilai dalam data.

Soal: Hitung jumlah user.

SELECT COUNT(*) AS total_users FROM users;


Soal: Tampilkan tanggal registrasi paling awal & terbaru.

SELECT MIN(id) AS first_user, MAX(id) AS last_user FROM users;

ðŸ”¹ 5. GROUP BY + HAVING

ðŸ‘‰ Fungsi: Mengelompokkan data.

Soal: Hitung jumlah order tiap user.

SELECT user_id, COUNT(order_id) AS total_orders
FROM orders
GROUP BY user_id;


Soal: Tampilkan user yang pesan lebih dari 2 kali.

SELECT user_id, COUNT(order_id) AS total_orders
FROM orders
GROUP BY user_id
HAVING COUNT(order_id) > 2;

ðŸ”¹ 6. JOIN

ðŸ‘‰ Fungsi: Menggabungkan data dari tabel berbeda.

Soal: Tampilkan username dan produk yang dipesan.

SELECT u.username, o.product_name
FROM users u
JOIN orders o ON u.id = o.user_id;


Soal: Tampilkan semua user walau belum order.

SELECT u.username, o.product_name
FROM users u
LEFT JOIN orders o ON u.id = o.user_id;

ðŸ”¹ 7. Subquery

ðŸ‘‰ Fungsi: Query di dalam query.

Soal: Cari user yang pernah order.

SELECT * FROM users
WHERE id IN (SELECT user_id FROM orders);

ðŸ”¹ 8. Constraint (Opsional)

ðŸ‘‰ Fungsi: Aturan di tabel.

Soal: Tambahkan constraint panjang password minimal 6 karakter.

ALTER TABLE users
ADD CONSTRAINT chk_pass CHECK (CHAR_LENGTH(password) >= 6);
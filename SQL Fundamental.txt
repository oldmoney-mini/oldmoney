SQL Fundamental

1. DDL (Data Definition Language)

CREATE DATABASE â†’ bikin database

CREATE DATABASE db_test;


CREATE TABLE â†’ bikin tabel baru

CREATE TABLE users (
    id INT AUTO_INCREMENT PRIMARY KEY,
    username VARCHAR(50) NOT NULL UNIQUE,
    email VARCHAR(100) NOT NULL,
    password VARCHAR(255) NOT NULL,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP
);


ALTER TABLE â†’ ubah struktur tabel

ALTER TABLE users ADD phone VARCHAR(20);


DROP TABLE â†’ hapus tabel

DROP TABLE users;

ðŸ”¹ 2. DML (Data Manipulation Language)

INSERT â†’ tambah data

INSERT INTO users (username, email, password)
VALUES ('Gerry', 'gerry@mail.com', '12345');


UPDATE â†’ ubah data

UPDATE users SET password = 'newpass123'
WHERE username = 'Gerry';


DELETE â†’ hapus data

DELETE FROM users WHERE id = 1;

ðŸ”¹ 3. SELECT (Query Dasar)

SELECT semua kolom

SELECT * FROM users;


SELECT kolom tertentu

SELECT username, email FROM users;


WHERE (filter)

SELECT * FROM users WHERE username = 'Gerry';


LIKE (pencarian pola)

SELECT * FROM users WHERE email LIKE '%@mail.com';


ORDER BY (sorting)

SELECT * FROM users ORDER BY created_at DESC;


LIMIT (batasi jumlah data)

SELECT * FROM users LIMIT 5;

ðŸ”¹ 4. Aggregate Functions

COUNT() â†’ hitung jumlah baris

SELECT COUNT(*) AS total_users FROM users;


SUM() â†’ jumlah total

SELECT SUM(price) AS total_sales FROM orders;


AVG() â†’ rata-rata

SELECT AVG(price) AS avg_price FROM orders;


MIN() / MAX() â†’ nilai terkecil / terbesar

SELECT MIN(price), MAX(price) FROM orders;


GROUP BY â†’ kelompokkan data

SELECT user_id, COUNT(*) AS total_orders
FROM orders
GROUP BY user_id;


HAVING â†’ filter setelah GROUP BY

SELECT user_id, COUNT(*) AS total_orders
FROM orders
GROUP BY user_id
HAVING COUNT(*) > 3;

ðŸ”¹ 5. JOIN (Menggabungkan Tabel)

INNER JOIN â†’ hanya data yang cocok

SELECT u.username, o.product_name
FROM users u
JOIN orders o ON u.id = o.user_id;


LEFT JOIN â†’ semua data dari kiri (users) walau gak ada order

SELECT u.username, o.product_name
FROM users u
LEFT JOIN orders o ON u.id = o.user_id;

ðŸ”¹ 6. Subquery

Subquery dalam WHERE

SELECT * FROM users
WHERE id IN (SELECT user_id FROM orders);

ðŸ”¹ 7. Fungsi String & Date (sering dipakai)

UPPER() / LOWER() â†’ ubah huruf

SELECT UPPER(username), LOWER(email) FROM users;


CONCAT() â†’ gabung string

SELECT CONCAT(username, ' - ', email) AS user_info FROM users;


SUBSTRING() â†’ ambil sebagian string

SELECT SUBSTRING(email, 1, 5) FROM users;


NOW() â†’ waktu sekarang

SELECT NOW();


YEAR(), MONTH(), DAY() â†’ ambil bagian tanggal

SELECT YEAR(created_at), MONTH(created_at) FROM users;